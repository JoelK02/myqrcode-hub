"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/buildings/page",{

/***/ "(app-pages-browser)/./app/services/buildings.ts":
/*!***********************************!*\
  !*** ./app/services/buildings.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBuilding: () => (/* binding */ createBuilding),\n/* harmony export */   deleteBuilding: () => (/* binding */ deleteBuilding),\n/* harmony export */   getBuilding: () => (/* binding */ getBuilding),\n/* harmony export */   getBuildings: () => (/* binding */ getBuildings),\n/* harmony export */   updateBuilding: () => (/* binding */ updateBuilding)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://pslapwodbwhedywmlfmk.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBzbGFwd29kYndoZWR5d21sZm1rIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NTQ4NzgsImV4cCI6MjA1NjEzMDg3OH0.YXR7RN1ELBO8ywDv_tXpioTFJrpNXr9UtDLhxzgcHmU\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\nasync function getBuildings() {\n    try {\n        const { data, error } = await supabase.from('buildings').select('*').order('created_at', {\n            ascending: false\n        });\n        if (error) {\n            console.error('Supabase error:', error);\n            throw new Error(\"Failed to fetch buildings: \".concat(error.message));\n        }\n        if (!data) {\n            throw new Error('No data returned from Supabase');\n        }\n        return data;\n    } catch (error) {\n        console.error('Error in getBuildings:', error);\n        throw error;\n    }\n}\nasync function getBuilding(id) {\n    try {\n        console.log(\"Fetching building with ID: \".concat(id));\n        // Use direct fetch API with proper headers to avoid 406 errors\n        const response = await fetch(\"\".concat(supabaseUrl, \"/rest/v1/buildings?id=eq.\").concat(id, \"&limit=1\"), {\n            method: 'GET',\n            headers: {\n                'apikey': supabaseAnonKey,\n                'Authorization': \"Bearer \".concat(supabaseAnonKey),\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Prefer': 'return=representation'\n            }\n        });\n        if (!response.ok) {\n            console.error(\"Error fetching building: \".concat(response.status, \" \").concat(response.statusText));\n            throw new Error(\"Failed to fetch building: \".concat(response.statusText));\n        }\n        const data = await response.json();\n        console.log('Building data received:', data);\n        if (!data || data.length === 0) {\n            throw new Error(\"Building with ID \".concat(id, \" not found\"));\n        }\n        return data[0];\n    } catch (error) {\n        console.error('Error in getBuilding:', error);\n        throw error;\n    }\n}\nasync function createBuilding(building) {\n    const { data, error } = await supabase.from('buildings').insert([\n        building\n    ]).select().single();\n    if (error) {\n        throw error;\n    }\n    return data;\n}\nasync function updateBuilding(building) {\n    const { data, error } = await supabase.from('buildings').update(building).eq('id', building.id).select().single();\n    if (error) {\n        throw error;\n    }\n    return data;\n}\nasync function deleteBuilding(id) {\n    const { error } = await supabase.from('buildings').delete().eq('id', id);\n    if (error) {\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9zZXJ2aWNlcy9idWlsZGluZ3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFEO0FBR3JELE1BQU1DLGNBQWNDLDBDQUFvQztBQUN4RCxNQUFNRyxrQkFBa0JILGtOQUF5QztBQUNqRSxNQUFNSyxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUk7QUFFcEMsZUFBZUc7SUFDcEIsSUFBSTtRQUNGLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNSCxTQUMzQkksSUFBSSxDQUFDLGFBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxLQUFLLENBQUMsY0FBYztZQUFFQyxXQUFXO1FBQU07UUFFMUMsSUFBSUosT0FBTztZQUNUSyxRQUFRTCxLQUFLLENBQUMsbUJBQW1CQTtZQUNqQyxNQUFNLElBQUlNLE1BQU0sOEJBQTRDLE9BQWROLE1BQU1PLE9BQU87UUFDN0Q7UUFFQSxJQUFJLENBQUNSLE1BQU07WUFDVCxNQUFNLElBQUlPLE1BQU07UUFDbEI7UUFFQSxPQUFPUDtJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkSyxRQUFRTCxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxNQUFNQTtJQUNSO0FBQ0Y7QUFFTyxlQUFlUSxZQUFZQyxFQUFVO0lBQzFDLElBQUk7UUFDRkosUUFBUUssR0FBRyxDQUFDLDhCQUFpQyxPQUFIRDtRQUUxQywrREFBK0Q7UUFDL0QsTUFBTUUsV0FBVyxNQUFNQyxNQUFNLEdBQTBDSCxPQUF2Q2xCLGFBQVksNkJBQThCLE9BQUhrQixJQUFHLGFBQVc7WUFDbkZJLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxVQUFVbkI7Z0JBQ1YsaUJBQWlCLFVBQTBCLE9BQWhCQTtnQkFDM0IsVUFBVTtnQkFDVixnQkFBZ0I7Z0JBQ2hCLFVBQVU7WUFDWjtRQUNGO1FBRUEsSUFBSSxDQUFDZ0IsU0FBU0ksRUFBRSxFQUFFO1lBQ2hCVixRQUFRTCxLQUFLLENBQUMsNEJBQStDVyxPQUFuQkEsU0FBU0ssTUFBTSxFQUFDLEtBQXVCLE9BQXBCTCxTQUFTTSxVQUFVO1lBQ2hGLE1BQU0sSUFBSVgsTUFBTSw2QkFBaUQsT0FBcEJLLFNBQVNNLFVBQVU7UUFDbEU7UUFFQSxNQUFNbEIsT0FBTyxNQUFNWSxTQUFTTyxJQUFJO1FBQ2hDYixRQUFRSyxHQUFHLENBQUMsMkJBQTJCWDtRQUV2QyxJQUFJLENBQUNBLFFBQVFBLEtBQUtvQixNQUFNLEtBQUssR0FBRztZQUM5QixNQUFNLElBQUliLE1BQU0sb0JBQXVCLE9BQUhHLElBQUc7UUFDekM7UUFFQSxPQUFPVixJQUFJLENBQUMsRUFBRTtJQUNoQixFQUFFLE9BQU9DLE9BQU87UUFDZEssUUFBUUwsS0FBSyxDQUFDLHlCQUF5QkE7UUFDdkMsTUFBTUE7SUFDUjtBQUNGO0FBRU8sZUFBZW9CLGVBQWVDLFFBQTZCO0lBQ2hFLE1BQU0sRUFBRXRCLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTUgsU0FDM0JJLElBQUksQ0FBQyxhQUNMcUIsTUFBTSxDQUFDO1FBQUNEO0tBQVMsRUFDakJuQixNQUFNLEdBQ05xQixNQUFNO0lBRVQsSUFBSXZCLE9BQU87UUFDVCxNQUFNQTtJQUNSO0lBRUEsT0FBT0Q7QUFDVDtBQUVPLGVBQWV5QixlQUFlSCxRQUE2QjtJQUNoRSxNQUFNLEVBQUV0QixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILFNBQzNCSSxJQUFJLENBQUMsYUFDTHdCLE1BQU0sQ0FBQ0osVUFDUEssRUFBRSxDQUFDLE1BQU1MLFNBQVNaLEVBQUUsRUFDcEJQLE1BQU0sR0FDTnFCLE1BQU07SUFFVCxJQUFJdkIsT0FBTztRQUNULE1BQU1BO0lBQ1I7SUFFQSxPQUFPRDtBQUNUO0FBRU8sZUFBZTRCLGVBQWVsQixFQUFVO0lBQzdDLE1BQU0sRUFBRVQsS0FBSyxFQUFFLEdBQUcsTUFBTUgsU0FDckJJLElBQUksQ0FBQyxhQUNMMkIsTUFBTSxHQUNORixFQUFFLENBQUMsTUFBTWpCO0lBRVosSUFBSVQsT0FBTztRQUNULE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2pvZWxrd29oL0RvY3VtZW50cy9HaXRIdWIvbXlxcmNvZGUtaHViL2FwcC9zZXJ2aWNlcy9idWlsZGluZ3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IEJ1aWxkaW5nLCBDcmVhdGVCdWlsZGluZ0lucHV0LCBVcGRhdGVCdWlsZGluZ0lucHV0IH0gZnJvbSAnLi4vdHlwZXMvYnVpbGRpbmdzJztcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhO1xuY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSk7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRCdWlsZGluZ3MoKTogUHJvbWlzZTxCdWlsZGluZ1tdPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdidWlsZGluZ3MnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAub3JkZXIoJ2NyZWF0ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XG5cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1N1cGFiYXNlIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGJ1aWxkaW5nczogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH1cblxuICAgIGlmICghZGF0YSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBkYXRhIHJldHVybmVkIGZyb20gU3VwYWJhc2UnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnZXRCdWlsZGluZ3M6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRCdWlsZGluZyhpZDogc3RyaW5nKTogUHJvbWlzZTxCdWlsZGluZz4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKGBGZXRjaGluZyBidWlsZGluZyB3aXRoIElEOiAke2lkfWApO1xuICAgIFxuICAgIC8vIFVzZSBkaXJlY3QgZmV0Y2ggQVBJIHdpdGggcHJvcGVyIGhlYWRlcnMgdG8gYXZvaWQgNDA2IGVycm9yc1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7c3VwYWJhc2VVcmx9L3Jlc3QvdjEvYnVpbGRpbmdzP2lkPWVxLiR7aWR9JmxpbWl0PTFgLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnYXBpa2V5Jzogc3VwYWJhc2VBbm9uS2V5LFxuICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtzdXBhYmFzZUFub25LZXl9YCxcbiAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ1ByZWZlcic6ICdyZXR1cm49cmVwcmVzZW50YXRpb24nXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBmZXRjaGluZyBidWlsZGluZzogJHtyZXNwb25zZS5zdGF0dXN9ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGJ1aWxkaW5nOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZygnQnVpbGRpbmcgZGF0YSByZWNlaXZlZDonLCBkYXRhKTtcbiAgICBcbiAgICBpZiAoIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQnVpbGRpbmcgd2l0aCBJRCAke2lkfSBub3QgZm91bmRgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YVswXTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBnZXRCdWlsZGluZzonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUJ1aWxkaW5nKGJ1aWxkaW5nOiBDcmVhdGVCdWlsZGluZ0lucHV0KTogUHJvbWlzZTxCdWlsZGluZz4ge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdidWlsZGluZ3MnKVxuICAgIC5pbnNlcnQoW2J1aWxkaW5nXSlcbiAgICAuc2VsZWN0KClcbiAgICAuc2luZ2xlKCk7XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUJ1aWxkaW5nKGJ1aWxkaW5nOiBVcGRhdGVCdWlsZGluZ0lucHV0KTogUHJvbWlzZTxCdWlsZGluZz4ge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdidWlsZGluZ3MnKVxuICAgIC51cGRhdGUoYnVpbGRpbmcpXG4gICAgLmVxKCdpZCcsIGJ1aWxkaW5nLmlkKVxuICAgIC5zZWxlY3QoKVxuICAgIC5zaW5nbGUoKTtcblxuICBpZiAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxuXG4gIHJldHVybiBkYXRhO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlQnVpbGRpbmcoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdidWlsZGluZ3MnKVxuICAgIC5kZWxldGUoKVxuICAgIC5lcSgnaWQnLCBpZCk7XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn0gIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiLCJnZXRCdWlsZGluZ3MiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0Iiwib3JkZXIiLCJhc2NlbmRpbmciLCJjb25zb2xlIiwiRXJyb3IiLCJtZXNzYWdlIiwiZ2V0QnVpbGRpbmciLCJpZCIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwib2siLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsImxlbmd0aCIsImNyZWF0ZUJ1aWxkaW5nIiwiYnVpbGRpbmciLCJpbnNlcnQiLCJzaW5nbGUiLCJ1cGRhdGVCdWlsZGluZyIsInVwZGF0ZSIsImVxIiwiZGVsZXRlQnVpbGRpbmciLCJkZWxldGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/buildings.ts\n"));

/***/ })

});