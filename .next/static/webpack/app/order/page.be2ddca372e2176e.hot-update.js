"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/order/page",{

/***/ "(app-pages-browser)/./app/services/service.ts":
/*!*********************************!*\
  !*** ./app/services/service.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createService: () => (/* binding */ createService),\n/* harmony export */   deleteService: () => (/* binding */ deleteService),\n/* harmony export */   getService: () => (/* binding */ getService),\n/* harmony export */   getServices: () => (/* binding */ getServices),\n/* harmony export */   updateService: () => (/* binding */ updateService)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Initialize Supabase client\nconst supabaseUrl = \"https://pslapwodbwhedywmlfmk.supabase.co\" || 0;\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBzbGFwd29kYndoZWR5d21sZm1rIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NTQ4NzgsImV4cCI6MjA1NjEzMDg3OH0.YXR7RN1ELBO8ywDv_tXpioTFJrpNXr9UtDLhxzgcHmU\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\nconst getServices = async (category)=>{\n    try {\n        let query = supabase.from('services').select('*').order('name');\n        if (category) {\n            query = query.eq('category', category);\n        }\n        const { data, error } = await query;\n        if (error) {\n            console.error('Error fetching services:', error);\n            throw new Error(error.message);\n        }\n        return data || [];\n    } catch (error) {\n        console.error('Error in getServices:', error);\n        throw error;\n    }\n};\nconst getService = async (id)=>{\n    try {\n        const { data, error } = await supabase.from('services').select('*').eq('id', id).single();\n        if (error) {\n            console.error('Error fetching service:', error);\n            throw new Error(error.message);\n        }\n        return data;\n    } catch (error) {\n        console.error('Error in getService:', error);\n        throw error;\n    }\n};\nconst createService = async (service)=>{\n    try {\n        const { data, error } = await supabase.from('services').insert(service).select().single();\n        if (error) {\n            console.error('Error creating service:', error);\n            throw new Error(error.message);\n        }\n        return data;\n    } catch (error) {\n        console.error('Error in createService:', error);\n        throw error;\n    }\n};\nconst updateService = async (service)=>{\n    try {\n        const { id, ...serviceData } = service;\n        const { data, error } = await supabase.from('services').update(serviceData).eq('id', id).select().single();\n        if (error) {\n            console.error('Error updating service:', error);\n            throw new Error(error.message);\n        }\n        return data;\n    } catch (error) {\n        console.error('Error in updateService:', error);\n        throw error;\n    }\n};\nconst deleteService = async (id)=>{\n    try {\n        const { error } = await supabase.from('services').delete().eq('id', id);\n        if (error) {\n            console.error('Error deleting service:', error);\n            throw new Error(error.message);\n        }\n    } catch (error) {\n        console.error('Error in deleteService:', error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9zZXJ2aWNlcy9zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRDtBQUdyRCw2QkFBNkI7QUFDN0IsTUFBTUMsY0FBY0MsMENBQW9DLElBQUksQ0FBRTtBQUM5RCxNQUFNRyxjQUFjSCxrTkFBeUMsSUFBSSxDQUFFO0FBQ25FLE1BQU1LLFdBQVdQLG1FQUFZQSxDQUFDQyxhQUFhSTtBQUVwQyxNQUFNRyxjQUFjLE9BQU9DO0lBQ2hDLElBQUk7UUFDRixJQUFJQyxRQUFRSCxTQUNUSSxJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDLEtBQ1BDLEtBQUssQ0FBQztRQUVULElBQUlKLFVBQVU7WUFDWkMsUUFBUUEsTUFBTUksRUFBRSxDQUFDLFlBQVlMO1FBQy9CO1FBRUEsTUFBTSxFQUFFTSxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1OO1FBRTlCLElBQUlNLE9BQU87WUFDVEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7WUFDMUMsTUFBTSxJQUFJRSxNQUFNRixNQUFNRyxPQUFPO1FBQy9CO1FBRUEsT0FBT0osUUFBUSxFQUFFO0lBQ25CLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0YsRUFBRTtBQUVLLE1BQU1JLGFBQWEsT0FBT0M7SUFDL0IsSUFBSTtRQUNGLE1BQU0sRUFBRU4sSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVCxTQUMzQkksSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBQyxLQUNQRSxFQUFFLENBQUMsTUFBTU8sSUFDVEMsTUFBTTtRQUVULElBQUlOLE9BQU87WUFDVEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7WUFDekMsTUFBTSxJQUFJRSxNQUFNRixNQUFNRyxPQUFPO1FBQy9CO1FBRUEsT0FBT0o7SUFDVCxFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHdCQUF3QkE7UUFDdEMsTUFBTUE7SUFDUjtBQUNGLEVBQUU7QUFFSyxNQUFNTyxnQkFBZ0IsT0FBT0M7SUFDbEMsSUFBSTtRQUNGLE1BQU0sRUFBRVQsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVCxTQUMzQkksSUFBSSxDQUFDLFlBQ0xjLE1BQU0sQ0FBQ0QsU0FDUFosTUFBTSxHQUNOVSxNQUFNO1FBRVQsSUFBSU4sT0FBTztZQUNUQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtZQUN6QyxNQUFNLElBQUlFLE1BQU1GLE1BQU1HLE9BQU87UUFDL0I7UUFFQSxPQUFPSjtJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxNQUFNQTtJQUNSO0FBQ0YsRUFBRTtBQUVLLE1BQU1VLGdCQUFnQixPQUFPRjtJQUNsQyxJQUFJO1FBQ0YsTUFBTSxFQUFFSCxFQUFFLEVBQUUsR0FBR00sYUFBYSxHQUFHSDtRQUUvQixNQUFNLEVBQUVULElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVQsU0FDM0JJLElBQUksQ0FBQyxZQUNMaUIsTUFBTSxDQUFDRCxhQUNQYixFQUFFLENBQUMsTUFBTU8sSUFDVFQsTUFBTSxHQUNOVSxNQUFNO1FBRVQsSUFBSU4sT0FBTztZQUNUQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtZQUN6QyxNQUFNLElBQUlFLE1BQU1GLE1BQU1HLE9BQU87UUFDL0I7UUFFQSxPQUFPSjtJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxNQUFNQTtJQUNSO0FBQ0YsRUFBRTtBQUVLLE1BQU1hLGdCQUFnQixPQUFPUjtJQUNsQyxJQUFJO1FBQ0YsTUFBTSxFQUFFTCxLQUFLLEVBQUUsR0FBRyxNQUFNVCxTQUNyQkksSUFBSSxDQUFDLFlBQ0xtQixNQUFNLEdBQ05oQixFQUFFLENBQUMsTUFBTU87UUFFWixJQUFJTCxPQUFPO1lBQ1RDLFFBQVFELEtBQUssQ0FBQywyQkFBMkJBO1lBQ3pDLE1BQU0sSUFBSUUsTUFBTUYsTUFBTUcsT0FBTztRQUMvQjtJQUNGLEVBQUUsT0FBT0gsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxNQUFNQTtJQUNSO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2pvZWxrd29oL0RvY3VtZW50cy9HaXRIdWIvbXlxcmNvZGUtaHViL2FwcC9zZXJ2aWNlcy9zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5pbXBvcnQgeyBTZXJ2aWNlLCBDcmVhdGVTZXJ2aWNlSW5wdXQsIFVwZGF0ZVNlcnZpY2VJbnB1dCB9IGZyb20gJy4uL3R5cGVzL3NlcnZpY2UnO1xuXG4vLyBJbml0aWFsaXplIFN1cGFiYXNlIGNsaWVudFxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJyc7XG5jb25zdCBzdXBhYmFzZUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIHx8ICcnO1xuY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlS2V5KTtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZpY2VzID0gYXN5bmMgKGNhdGVnb3J5Pzogc3RyaW5nKTogUHJvbWlzZTxTZXJ2aWNlW10+ID0+IHtcbiAgdHJ5IHtcbiAgICBsZXQgcXVlcnkgPSBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3NlcnZpY2VzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yZGVyKCduYW1lJyk7XG4gICAgXG4gICAgaWYgKGNhdGVnb3J5KSB7XG4gICAgICBxdWVyeSA9IHF1ZXJ5LmVxKCdjYXRlZ29yeScsIGNhdGVnb3J5KTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgcXVlcnk7XG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBzZXJ2aWNlczonLCBlcnJvcik7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBkYXRhIHx8IFtdO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGdldFNlcnZpY2VzOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZpY2UgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8U2VydmljZT4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgnc2VydmljZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ2lkJywgaWQpXG4gICAgICAuc2luZ2xlKCk7XG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBzZXJ2aWNlOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0U2VydmljZTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTZXJ2aWNlID0gYXN5bmMgKHNlcnZpY2U6IENyZWF0ZVNlcnZpY2VJbnB1dCk6IFByb21pc2U8U2VydmljZT4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgnc2VydmljZXMnKVxuICAgICAgLmluc2VydChzZXJ2aWNlKVxuICAgICAgLnNlbGVjdCgpXG4gICAgICAuc2luZ2xlKCk7XG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBzZXJ2aWNlOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gY3JlYXRlU2VydmljZTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVTZXJ2aWNlID0gYXN5bmMgKHNlcnZpY2U6IFVwZGF0ZVNlcnZpY2VJbnB1dCk6IFByb21pc2U8U2VydmljZT4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaWQsIC4uLnNlcnZpY2VEYXRhIH0gPSBzZXJ2aWNlO1xuICAgIFxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgnc2VydmljZXMnKVxuICAgICAgLnVwZGF0ZShzZXJ2aWNlRGF0YSlcbiAgICAgIC5lcSgnaWQnLCBpZClcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpO1xuICAgIFxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgc2VydmljZTonLCBlcnJvcik7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIHVwZGF0ZVNlcnZpY2U6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlU2VydmljZSA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdzZXJ2aWNlcycpXG4gICAgICAuZGVsZXRlKClcbiAgICAgIC5lcSgnaWQnLCBpZCk7XG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZWxldGluZyBzZXJ2aWNlOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZGVsZXRlU2VydmljZTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiLCJnZXRTZXJ2aWNlcyIsImNhdGVnb3J5IiwicXVlcnkiLCJmcm9tIiwic2VsZWN0Iiwib3JkZXIiLCJlcSIsImRhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJFcnJvciIsIm1lc3NhZ2UiLCJnZXRTZXJ2aWNlIiwiaWQiLCJzaW5nbGUiLCJjcmVhdGVTZXJ2aWNlIiwic2VydmljZSIsImluc2VydCIsInVwZGF0ZVNlcnZpY2UiLCJzZXJ2aWNlRGF0YSIsInVwZGF0ZSIsImRlbGV0ZVNlcnZpY2UiLCJkZWxldGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/service.ts\n"));

/***/ })

});